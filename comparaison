<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Carte avec Swipe et Outils</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />

  <!-- Feuilles de style Leaflet -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet-draw@1.0.4/dist/leaflet.draw.css" />
  <link rel="stylesheet" href="range.css" /> <!-- Local range.css -->

  <style>
    body {
      margin: 0;
      padding: 0;
    }
    #map {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
    }
  </style>
</head>
<body>
  <div id="map"></div>

  <!-- Scripts Leaflet -->
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
  <script src="https://unpkg.com/georaster"></script>
  <script src="https://unpkg.com/georaster-layer-for-leaflet"></script>
  <script src="https://unpkg.com/leaflet-draw@1.0.4/dist/leaflet.draw.js"></script>
  <script src="sidebysidemin.js"></script> <!-- Local side-by-side script -->

  <script>
    // Initialisation de la carte
    var map = L.map('map').setView([31.63, -7.98], 12);

    // Couche OpenStreetMap
    var osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    // Couche Google Satellite
    var googleSatelliteLayer = L.tileLayer('http://mt{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
      subdomains: ['0', '1', '2', '3'],
      attribution: '&copy; Google Satellite'
    });

    // URL du fichier GeoTIFF
    var url_to_geotiff_file = "https://cog-storage.s3.eu-north-1.amazonaws.com/10300500E4F91400-visual+(4)_cog.tif";

    // Chargement du GeoTIFF
    parseGeoraster(url_to_geotiff_file).then(georaster => {
      var geotiffLayer = new GeoRasterLayer({
        georaster: georaster,
        opacity: 1,
        resolution: 256 // Ajustez la résolution si nécessaire
      });

      // Ajouter les couches à la carte
      osmLayer.addTo(map); // OpenStreetMap
      geotiffLayer.addTo(map); // GeoTIFF

      // Ajouter le contrôle de swipe
      var sideBySide = L.control.sideBySide(googleSatelliteLayer, geotiffLayer).addTo(map);

      // Adapter la vue de la carte aux limites du GeoTIFF
      map.fitBounds(geotiffLayer.getBounds());
    }).catch(error => {
      console.error("Erreur lors du chargement du GeoTIFF :", error);
    });

    // Ajout de Leaflet Draw
    var drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    var drawControl = new L.Control.Draw({
      edit: {
        featureGroup: drawnItems, // Activer l'édition sur les objets dessinés
        remove: true // Activer la suppression
      },
      draw: {
        rectangle: true, // Outil de dessin rectangle
        polygon: true,   // Outil de dessin polygone
        circle: true,    // Outil de dessin cercle
        marker: true,    // Outil de dessin marqueur
        polyline: true   // Outil de dessin polyline
      }
    });

    map.addControl(drawControl);

    // Événements de dessin
    map.on(L.Draw.Event.CREATED, function (event) {
      var layer = event.layer;
      drawnItems.addLayer(layer);

      // Exemple : Affiche les coordonnées dans la console
      console.log("Objet ajouté :", JSON.stringify(layer.toGeoJSON()));
    });

    // Événements sur la suppression
    map.on(L.Draw.Event.DELETED, function (event) {
      console.log("Un ou plusieurs objets ont été supprimés.");
    });

    // Option pour basculer entre les couches
    var baseMaps = {
      "OpenStreetMap": osmLayer,
      "Google Satellite": googleSatelliteLayer
    };
    L.control.layers(baseMaps).addTo(map);
  </script>
</body>
</html>
